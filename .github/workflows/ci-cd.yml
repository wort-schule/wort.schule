name: CI/CD Pipeline

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: ci_db
          POSTGRES_HOST_AUTH_METHOD: trust
        ports: ["5432:5432"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Ruby lint
        run: bundle exec standardrb --no-fix

      - name: Install libvips
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update -qq -o Acquire::Retries=3
          sudo apt-get install --fix-missing -qq -o Acquire::Retries=3 libvips

      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: postgres
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run tests
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: postgres
        run: bundle exec rails spec

      - name: Upload screenshots of failures
        uses: actions/upload-artifact@v4.6.2
        if: ${{ failure() }}
        with:
          name: capybara-screenshots-${{ github.sha }}
          path: tmp/capybara/screenshot_*
          retention-days: 1

  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    # Only deploy from main branch after tests pass
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: deployment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H wort.schule >> ~/.ssh/known_hosts

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.7

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --without test

      - name: Ensure Ruby 3.3.7 is default on server
        run: |
          ssh wortschule@wort.schule "source /etc/profile.d/rvm.sh && rvm install 3.3.7 && rvm alias create default 3.3.7 && rvm use 3.3.7 --default"

      - name: Deploy with Mina
        run: bundle exec mina deploy